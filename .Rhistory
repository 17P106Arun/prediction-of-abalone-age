setwd("F:/Docs/Data science/project")
#load the dataset
dataset <-read.delim("abalone.data",sep=",",header = F)
View(dataset)
plot(hcd, xlim = c(1, 20), ylim = c(1,8))
plot(dataset, xlim = c(1, 20), ylim = c(1,8))
library(corrgram)
install.packages("corrgram")
library(corrgram)
corrgram::corrgram(dataset)
library(corrplot)
library(corrplot)
corrplot(dataset)
corrplot(dataset)
?corrplot
corrgram::corrgram(dataset)
library(corrplot)
#load the dataset
dataset <-read.delim("abalone.data",sep=",",header = F)
View(dataset)
head(dataset)
colnames(dataset)=c("Sex","Length","Diameter","Height","Whole weight","Shucked weight","Viscera weight","Shell weight","Rings")
#EDA
library(dplyr)
library(ggplot2)
library(ggplot2)
library(ggplot2)
#EDA
library(dplyr)
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
library(corrplot)
install.packages("corrgram")
library(corrgram)
library(corrgram)
corrgram(dataset)
corrgram(dataset,order=T)
corrgram(dataset,order=F)
corrgram(dataset,order=F,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Abalone data"))
corrgram(dataset,order=F,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Abalone data")
corrgram(dataset,order=T,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Abalone data")
corrgram(dataset[dataset$Rings],order=T,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Abalone data")
corrgram(dataset[Rings],order=T,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Abalone data")
corrgram(dataset[,dataset$Rings],order=T,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Abalone data")
corrgram(dataset[dataset$Rings,],order=T,lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Abalone data")
#EDA
library(dplyr)
#EDA
library(dplyr)
library(ggplot2)
library(ggplot2)
library(caTools)
library(caTools)
set.seed=123
set.seed(123
set.seed(123)
set.seed=123
#load the dataset
dataset <-read.delim("abalone.data",sep=",",header = F)
View(dataset)
colnames(dataset)=c("Sex","Length","Diameter","Height","Whole weight","Shucked weight","Viscera weight","Shell weight","Rings")
sample=sample.split(dataset,SplitRatio = 0.8)
traindata<-subset(dataset,sample==T)
testdata<-subset(dataset,split==F)
testdata<-subset(dataset,sample==F)
model <-lm(Rings~.,data=traindata)
summary(model)
library(ggPredict)
install.packages("ggPredict")
ggPredict(model)
library(ggPredict)
install.packages(ggPredict)
install.packages("predict3d")
cor(dataset$Rings,dataset$Length)
library(ggPredict3d)
ggPredict(model,digits=1)
cor(dataset$Rings,dataset$Length)
cor(dataset$Rings,dataset$Diameter)
cor(dataset$Rings,dataset$`Whole weight`)
cor(dataset$Rings,dataset$`Shell weight`)
cor(dataset$Length,dataset$Rings)
library(ggPredict3d)
flush()
flush()
clean_dataset<-dataset %>% select(c(dataset$Length,dataset$Diameter,dataset$`Whole weight`,dataset$`Shell weight`))
clean_dataset<-select(c(dataset$Length,dataset$Diameter,dataset$`Whole weight`,dataset$`Shell weight`))
#EDA
library(dplyr)
clean_dataset<-select(c(dataset$Length,dataset$Diameter,dataset$`Whole weight`,dataset$`Shell weight`))
colnames(dataset)
clean_dataset<-select(c(dataset$Length,dataset$Diameter,dataset$`Whole weight`,dataset$`Shell weight`)) %>% na.omit()
clean_dataset<-dataset %>% select(c(dataset$Length,dataset$Diameter,dataset$`Whole weight`,dataset$`Shell weight`)) %>% na.omit()
clean_dataset<-dataset %>% select(c(2,3,5,8)) %>% na.omit()
clean_dataset
library(caTools)
set.seed(567)
sample=sample.split(clean_dataset,SplitRatio = 0.8)
traindata<-subset(clean_dataset,sample==T)
testdata<-subset(clean_dataset,sample==F)
library(rpart)
model <-rpart(formula=Rings~.,data=traindata,method="class")
clean_dataset<-dataset %>% select(c(2,3,5,8,9)) %>% na.omit()
clean_dataset
sample=sample.split(clean_dataset,SplitRatio = 0.8)
traindata<-subset(clean_dataset,sample==T)
testdata<-subset(clean_dataset,sample==F)
library(rpart)
model <-rpart(formula=Rings~.,data=traindata,method="class")
summary(model)
library(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
library(rpart.plot)
rpart.plot(model)
model <-rpart(formula=Rings~.,data=traindata,method="anavo")
library(rpart.plot)
model <-rpart(formula=Rings~.,data=traindata,method="anava")
model <-rpart(formula=Rings~.,data=traindata,method="anova")
rpart.plot(model)
rsq.rpart(model)
plot(as.party(model))
plot(as.part(model))
plot(as.rpart(model))
clean_dataset<-clean_dataset %>% mutate(age=case_when(Rings %in% 1:5~"young",Rings %in% 6:13~"adult",Rings %in% 14:30~"old"))
clean_dataset
View(clean_dataset)
clean_dataset<-clean_dataset %>% mutate(age=case_when(Rings %in% 1:5~"young",Rings %in% 6:13~"adult",Rings %in% 14:30~"old"))
clean_dataset<-dataset %>% select(c(2,3,5,8,9)) %>% na.omit()
clean_dataset
clean_dataset<-dataset %>% select(c(2,3,5,8,10)) %>% na.omit()
clean_dataset
clean_dataset<-clean_dataset %>% select(c(2,3,5,8,10)) %>% na.omit()
clean_dataset
clean_dataset<-dataset %>% mutate(age=case_when(Rings %in% 1:5~"young",Rings %in% 6:13~"adult",Rings %in% 14:30~"old"))
clean_dataset<-clean_dataset %>% select(c(2,3,5,8,10)) %>% na.omit()
clean_dataset
library(caTools)
set.seed(567)
sample=sample.split(clean_dataset,SplitRatio = 0.8)
traindata<-subset(clean_dataset,sample==T)
testdata<-subset(clean_dataset,sample==F)
library(rpart)
model <-rpart(formula=Rings~.,data=traindata,method="anova")
summary(model)
library(rpart.plot)
rpart.plot(model)
model <-rpart(formula=Rings~.,data=traindata,method="class")
model <-rpart(formula=Rings~.,data=traindata,method="anova")
model <-rpart(formula=age~.,data=traindata,method="anova")
clean_dataset
model <-rpart(formula=age~.,data=traindata,method="anova")
model <-rpart(formula=age~.,data=traindata,method="class")
rpart.plot(model)
?rpart
model <-rpart(formula=age~.,data=traindata,method="anova")
rpart.plot(model)
traindata
model <-rpart(formula=age~.,data=traindata)
rpart.plot(model)
set.seed(123)
sample=sample.split(clean_dataset,SplitRatio = 0.8)
traindata<-subset(clean_dataset,sample==T)
traindata
testdata<-subset(clean_dataset,sample==F)
library(rpart)
model <-rpart(formula=age~.,data=traindata)
rpart.plot(model)
model <-rpart(formula=age~.,data=traindata,method="anova")
rpart.plot(model)
model <-rpart(formula=age~.,data=traindata,method="class")
rpart.plot(model)
summary(model)
model <-rpart(formula=age~.,data=traindata,method="exp")
model <-rpart(formula=age~.,data=traindata,method="class")
rpart.plot(model)
rsq.rpart(model)
predicted_model<-predict(object=model,newdata=testdata,type="class")
confusion.matrix<-table(testdata$age,predicted_model)
confusion.matrix
accuracy<-sum(diag(confusion.matrix))/sum(confusion.matrix)
accuracy
